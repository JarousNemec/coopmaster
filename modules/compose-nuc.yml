services:

  coopmaster-health-checker:
    image: jardathedev/coopmaster-health-checker:latest
    restart: always
    pull_policy: always
    ports:
      - 9000:9000
    environment:
      - SERVICES_LOCATIONS=${SERVICES_LOCATIONS}
      - REPORT_INTERVAL=${REPORT_INTERVAL}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - coopmaster

  coopmaster_room_assistant:
    image: jardathedev/coopmaster-room-assistant:latest
    restart: always
    pull_policy: always
    ports:
      - "9006:9006"
    environment:
      - HOST=localhost
      - PORT=9006
      - ROOM_DRIVER_HOST=${COOP_DRIVERS_HOST}
      - ROOM_DRIVER_PORT=9005
      - MQTT_BROKER=${MQTT_BROKER}
      - MQTT_PORT=1883
      - MQTT_TOPIC_TEMPERATURE=coopmaster/room/temperature
      - MQTT_TOPIC_HUMIDITY=coopmaster/room/humidity
      - MQTT_TOPIC_DOOR_STATE=coopmaster/room/door/state
      - MQTT_TOPIC_DOOR_CMND=coopmaster/room/door/cmnd
      - MQTT_TOPIC_LAMP_STATE=coopmaster/room/lamp/state
      - MQTT_TOPIC_LAMP_CMND=coopmaster/room/lamp/cmnd
      - REPORT_INTERVAL=2
    networks:
      - coopmaster

  coopmaster_nest_watcher:
    image: jardathedev/coopmaster-nest-watcher:latest
    restart: always
    pull_policy: always
    ports:
      - 9007:9007
    env_file:
      - .env
    environment:
      - HOST=localhost
      - PORT=9007
      - MQTT_BROKER=${MQTT_BROKER}
      - MQTT_PORT=1883
      - MQTT_TOPIC=nest_watcher/count
    networks:
      - coopmaster

  coopmaster_dog_alarm:
    image: jardathedev/coopmaster-dog-alarm:latest
    restart: always
    pull_policy: always
    ports:
      - 9008:9008
    env_file:
      - .env
    environment:
      - HOST=localhost
      - PORT=9008
      - CAMERA_DRIVER_PORT=9001
      - CAMERA_DRIVER_HOST=${COOP_DRIVERS_HOST}
      - MQTT_BROKER=${MQTT_BROKER}
      - MQTT_PORT=1883
      - MQTT_DOG_DETECTED_TOPIC=coopmaster/dog/detected
      - MQTT_DOG_ACTUAL_IMAGE=coopmaster/dog/image/actual
      - MQTT_DOG_ALARM_IMAGE=coopmaster/dog/image/alarm
    networks:
      - coopmaster

  coopmaster_chicken_watch_guard:
    image: jardathedev/coopmaster-chicken-watch-guard:latest
    restart: always
    pull_policy: always
    ports:
      - 9003:9003
    env_file:
      - .env
    environment:
      - HOST=localhost
      - PORT=9003
      - CAMERA_DRIVER_PORT=9001
      - CAMERA_DRIVER_HOST=${COOP_DRIVERS_HOST}
      - MQTT_BROKER=${MQTT_BROKER}
      - MQTT_PORT=1883
      - MQTT_CHICKEN_COUNT_TOPIC=coopmaster/chicken/count
      - MQTT_CHICKEN_ACTUAL_IMAGE=coopmaster/chicken/image/actual
    networks:
      - coopmaster

  coop-solution-db:
    image: postgres:15
    container_name: coop-solution-db
    pull_policy: always
    restart: always
    env_file:
      - .env
    environment:
      - DB_POSTGRES_EXTRA_CONFIG=shared_preload_libraries=pg_stat_statements
    ports:
      - 5432:5432
    networks:
      - coopmaster
    volumes:
      - ./postgres_backup:/storage/backup
      - ./postgres_data:/storage/data

  mosquitto:
    container_name: mqtt
    image: eclipse-mosquitto
    restart: always
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - 1883:1883
    networks:
      - coopmaster

  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    restart: always
    volumes:
      - './home_assistant/config:/config'
    environment:
      - TZ=Europe/Bratislava # get your Time Zone from - https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - '8123:8123'
    networks:
      - coopmaster
      - tunnel

  cloudflared:
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    networks:
      - tunnel
networks:
  coopmaster:
    name: coopmaster
  tunnel:
    name: tunnel
    external: true
